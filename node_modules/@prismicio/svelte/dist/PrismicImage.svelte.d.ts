import { SvelteComponent } from "svelte";
import { asImageWidthSrcSet, asImagePixelDensitySrcSet, type ImageFieldImage } from "@prismicio/client";
import type { ImgixURLParams } from "imgix-url-builder";
import type { HTMLImgAttributes } from "svelte/elements";
declare const __propDef: {
    props: Omit<HTMLImgAttributes, "src" | "srcset" | "alt"> & {
        /**
         * The Prismic image field or thumbnail to render.
         */
        field: ImageFieldImage | null | undefined;
        /**
         * An object of Imgix URL API parameters to transform the image.
         *
         * See: https://docs.imgix.com/apis/rendering
         */
        imgixParams?: ImgixURLParams | undefined;
        /**
         * Declare an image as decorative by providing `alt=""`.
         *
         * See:
         * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images
         */
        alt?: "" | undefined;
        /**
         * Declare an image as decorative only if the Image field does not have
         * alternative text by providing `fallbackAlt=""`.
         *
         * See:
         * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images
         */
        fallbackAlt?: "" | undefined;
    } & ({
        /**
         * Widths used to build a `srcset` value for the Image field.
         *
         * If a `widths` prop is not given or `"defaults"` is passed, the
         * following widths will be used: 640, 750, 828, 1080, 1200, 1920,
         * 2048, 3840.
         *
         * If the Image field contains responsive views, each responsive view
         * can be used as a width in the resulting `srcset` by passing
         * `"thumbnails"` as the `widths` prop.
         */
        widths?: NonNullable<Parameters<typeof asImageWidthSrcSet>[1]>["widths"] | "defaults";
        pixelDensities?: undefined;
    } | {
        /**
         * Pixel densities used to build a `srcset` value for the Image field.
         *
         * If a `pixelDensities` prop is passed `"defaults"`, the following
         * pixel densities will be used: 1, 2, 3.
         */
        pixelDensities: NonNullable<Parameters<typeof asImagePixelDensitySrcSet>[1]>["pixelDensities"] | "defaults";
        widths?: undefined;
    });
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type PrismicImageProps = typeof __propDef.props;
export type PrismicImageEvents = typeof __propDef.events;
export type PrismicImageSlots = typeof __propDef.slots;
/**
 * Component to render a Prismic image field as an `img` element with `width`, `height`, `alt`, `src`, and `srcset` attributes.
 *
 *  @example Rendering an image field:
 * ```svelte
 * 	<PrismicImage
 * 		field={document.data.example_image}
 * 		imgixParams={{ sat: -100 }}
 * 	/>
 * ```
 */
export default class PrismicImage extends SvelteComponent<PrismicImageProps, PrismicImageEvents, PrismicImageSlots> {
}
export {};
