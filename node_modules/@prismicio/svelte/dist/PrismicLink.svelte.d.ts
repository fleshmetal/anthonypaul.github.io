import { SvelteComponent } from "svelte";
import { type AsLinkAttrsConfig, type LinkField, type PrismicDocument } from "@prismicio/client";
import type { HTMLAnchorAttributes } from "svelte/elements";
declare const __propDef: {
    props: Omit<HTMLAnchorAttributes, "rel" | "href"> & {
        /**
         * The `rel` attribute for the link. By default, `"noreferrer"` is provided
         * if the link's URL is external. This prop can be provided a function to
         * use the link's metadata to determine the `rel` value.
         */
        rel?: string | AsLinkAttrsConfig["rel"];
    } & ({
        /**
         * A Prismic link field, content relationship field, or link to media
         * field.
         */
        field: LinkField;
        document?: undefined;
    } | {
        /**
         * A Prismic document.
         */
        document: PrismicDocument;
        field?: undefined;
    });
    events: {
        click: MouseEvent;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type PrismicLinkProps = typeof __propDef.props;
export type PrismicLinkEvents = typeof __propDef.events;
export type PrismicLinkSlots = typeof __propDef.slots;
/**
 * Component to render a Prismic link, link to media, content relationship, or whole document as an `a` tag.
 *
 *  @example Rendering a Link field:
 * ```svelte
 * 	<PrismicLink field={document.data.example_link} />
 * ```
 */
export default class PrismicLink extends SvelteComponent<PrismicLinkProps, PrismicLinkEvents, PrismicLinkSlots> {
}
export {};
