"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageLinkRenderer = exports.FileLinkRenderer = exports.ExternalLinkRenderer = exports.DocumentLinkRenderer = void 0;
const tslib_1 = require("tslib");
const models_1 = require("../../../models");
const AnyLinkRenderer_1 = tslib_1.__importDefault(require("./AnyLinkRenderer"));
const DocumentLinkRenderer_1 = tslib_1.__importDefault(require("./DocumentLinkRenderer"));
exports.DocumentLinkRenderer = DocumentLinkRenderer_1.default;
const ExternalLinkRenderer_1 = tslib_1.__importDefault(require("./ExternalLinkRenderer"));
exports.ExternalLinkRenderer = ExternalLinkRenderer_1.default;
const FileLinkRenderer_1 = tslib_1.__importDefault(require("./FileLinkRenderer"));
exports.FileLinkRenderer = FileLinkRenderer_1.default;
const ImageLinkRenderer_1 = tslib_1.__importDefault(require("./ImageLinkRenderer"));
exports.ImageLinkRenderer = ImageLinkRenderer_1.default;
const MediaLinkRenderer_1 = tslib_1.__importDefault(require("./MediaLinkRenderer"));
const LinkRenderer = (ctx) => ({
    renderV1(link, fetch, options) {
        if (link.value.__TYPE__ === "ImageLink") {
            return (0, ImageLinkRenderer_1.default)(ctx).renderV1({ ...link, value: link.value }, undefined, options);
        }
        else if (link.value.__TYPE__ === "DocumentLink") {
            return (0, DocumentLinkRenderer_1.default)(ctx).renderV1({ ...link, value: link.value }, fetch, options);
        }
        else if (link.value.__TYPE__ === "FileLink") {
            return (0, FileLinkRenderer_1.default)(ctx).renderV1({ ...link, value: link.value }, undefined, options);
        }
        else if (link.value.__TYPE__ === "ExternalLink") {
            return ExternalLinkRenderer_1.default.renderV1({ ...link, value: link.value }, undefined, options);
        }
        else if (link.value.__TYPE__ === "MediaLink") {
            return MediaLinkRenderer_1.default.renderV1({ ...link, value: link.value }, undefined, options);
        }
        else if (link.value.__TYPE__ === "AnyLink") {
            return AnyLinkRenderer_1.default.renderV1({ ...link, value: link.value }, undefined, options);
        }
        else {
            throw new Error(`No rendered found for link ${JSON.stringify(link)}`); // normally unreachable
        }
    },
    renderV2(def, content, fetch, options) {
        if (((0, models_1.isMediaLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "ImageLink") {
            return (0, ImageLinkRenderer_1.default)(ctx).renderV2(def.config, {
                ...content,
                value: content.value,
            }, undefined, options);
        }
        else if (((0, models_1.isDocumentLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "DocumentLink") {
            return (0, DocumentLinkRenderer_1.default)(ctx).renderV2(def.config, { ...content, value: content.value }, fetch, options);
        }
        else if (((0, models_1.isMediaLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "FileLink") {
            return (0, FileLinkRenderer_1.default)(ctx).renderV2(def.config, {
                ...content,
                value: content.value,
            }, undefined, options);
        }
        else if (((0, models_1.isWebLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "ExternalLink") {
            return ExternalLinkRenderer_1.default.renderV2(def.config, { ...content, value: content.value }, undefined, options);
        }
        else if (((0, models_1.isMediaLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "MediaLink") {
            return MediaLinkRenderer_1.default.renderV2(def.config, { ...content, value: content.value }, undefined, options);
        }
        else if ((0, models_1.isAnyLinkDef)(def) && content.value.__TYPE__ === "AnyLink") {
            return AnyLinkRenderer_1.default.renderV2(def.config, { ...content, value: content.value }, undefined, options);
        }
        else {
            return this.renderDefault(def);
        }
    },
    renderDefault(def) {
        var _a;
        switch ((_a = def.config) === null || _a === void 0 ? void 0 : _a.select) {
            case "media":
                return {
                    link_type: "Media",
                };
            case "document":
                return {
                    link_type: "Document",
                };
            case "web":
                return {
                    link_type: "Web",
                };
            default:
                return {
                    link_type: "Any",
                };
        }
    },
    renderMocks(def, content, options) {
        if (((0, models_1.isMediaLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "ImageLink") {
            return (0, ImageLinkRenderer_1.default)(ctx).renderMocks(def.config, {
                ...content,
                value: content.value,
            }, options);
        }
        else if (((0, models_1.isDocumentLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "DocumentLink") {
            return (0, DocumentLinkRenderer_1.default)(ctx).renderMocks(def.config, {
                ...content,
                value: content.value,
            }, options);
        }
        else if (((0, models_1.isMediaLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "FileLink") {
            return (0, FileLinkRenderer_1.default)(ctx).renderMocks(def.config, {
                ...content,
                value: content.value,
            }, options);
        }
        else if (((0, models_1.isWebLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "ExternalLink") {
            return ExternalLinkRenderer_1.default.renderMocks(def.config, {
                ...content,
                value: content.value,
            }, options);
        }
        else if (((0, models_1.isMediaLinkDef)(def) || (0, models_1.isAnyLinkDef)(def)) && content.value.__TYPE__ === "MediaLink") {
            return MediaLinkRenderer_1.default.renderMocks(def.config, { ...content, value: content.value }, options);
        }
        else if ((0, models_1.isAnyLinkDef)(def) && content.value.__TYPE__ === "AnyLink") {
            return AnyLinkRenderer_1.default.renderMocks(def.config, { ...content, value: content.value }, options);
        }
        else {
            return this.renderDefault(def);
        }
    },
});
exports.default = LinkRenderer;
