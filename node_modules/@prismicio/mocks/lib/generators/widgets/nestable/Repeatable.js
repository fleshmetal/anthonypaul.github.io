"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepeatableMock = void 0;
const content_1 = require("@prismicio/types-internal/lib/content");
const diff_1 = require("@prismicio/types-internal/lib/customtypes/diff");
const Link_1 = require("./Link");
exports.RepeatableMock = {
    generate(def, config) {
        var _a, _b;
        return {
            __TYPE__: "RepeatableContent",
            type: def.type,
            value: (_a = config === null || config === void 0 ? void 0 : config.value) !== null && _a !== void 0 ? _a : Array((_b = config === null || config === void 0 ? void 0 : config.nbItems) !== null && _b !== void 0 ? _b : 1)
                .fill(null)
                .map(() => Link_1.LinkMock.generate(def)),
        };
    },
    patch(diff, _content, config) {
        switch (diff.op) {
            case diff_1.DiffOperation.Removed:
                return;
            case diff_1.DiffOperation.Updated:
            case diff_1.DiffOperation.Added:
                return this.generate(diff.value, config);
        }
    },
    applyPatch(data) {
        var _a, _b;
        if (data.diff.op === diff_1.DiffOperation.Removed)
            return { result: undefined };
        if (data.diff.value.type !== "Link" || !((_a = data.diff.value.config) === null || _a === void 0 ? void 0 : _a.repeat))
            return;
        const result = this.patch(data.diff, (0, content_1.isRepeatableContent)(data.content) ? data.content : undefined, ((_b = data.config) === null || _b === void 0 ? void 0 : _b.type) === "Repeatable" ? data.config : undefined);
        return { result };
    },
};
