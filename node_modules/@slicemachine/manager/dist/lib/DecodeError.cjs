"use strict";
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const ioTsReporters = require("io-ts-reporters");
function isZodIssueArray(errors) {
  return "path" in errors[0];
}
function formatZodErrors(errors) {
  return errors.map((err) => {
    const path = err.path.length > 0 ? ` at ${err.path.join(".")}` : "";
    return `${err.message}${path}`;
  });
}
class DecodeError extends Error {
  constructor(args) {
    let formattedErrors = [];
    if (isZodIssueArray(args.errors)) {
      formattedErrors = formatZodErrors(args.errors);
    } else {
      formattedErrors = ioTsReporters.formatValidationErrors(args.errors);
    }
    super(formattedErrors.join(", "));
    __publicField(this, "name", "DecodeError");
    __publicField(this, "input");
    __publicField(this, "errors");
    this.input = args.input;
    this.errors = formattedErrors;
  }
}
exports.DecodeError = DecodeError;
//# sourceMappingURL=DecodeError.cjs.map
