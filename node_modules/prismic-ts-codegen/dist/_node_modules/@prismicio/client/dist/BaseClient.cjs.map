{"version":3,"file":"BaseClient.cjs","sources":["../../../../../node_modules/@prismicio/client/dist/BaseClient.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nimport { pLimit } from \"./lib/pLimit.js\";\nimport { PrismicError } from \"./errors/PrismicError.js\";\nconst UNKNOWN_RATE_LIMIT_DELAY = 1500;\nclass BaseClient {\n  constructor(options) {\n    /**\n     * The function used to make network requests to the Prismic REST API. In\n     * environments where a global `fetch` function does not exist, such as\n     * Node.js, this function must be provided.\n     */\n    __publicField(this, \"fetchFn\");\n    __publicField(this, \"fetchOptions\");\n    /**\n     * Active queued `fetch()` jobs keyed by URL and AbortSignal (if it exists).\n     */\n    __publicField(this, \"queuedFetchJobs\", {});\n    /**\n     * Active deduped `fetch()` jobs keyed by URL and AbortSignal (if it exists).\n     */\n    __publicField(this, \"dedupedFetchJobs\", {});\n    this.fetchOptions = options.fetchOptions;\n    if (typeof options.fetch === \"function\") {\n      this.fetchFn = options.fetch;\n    } else if (typeof globalThis.fetch === \"function\") {\n      this.fetchFn = globalThis.fetch;\n    } else {\n      throw new PrismicError(\"A valid fetch implementation was not provided. In environments where fetch is not available (including Node.js), a fetch implementation must be provided via a polyfill or the `fetch` option.\", void 0, void 0);\n    }\n    if (this.fetchFn === globalThis.fetch) {\n      this.fetchFn = this.fetchFn.bind(globalThis);\n    }\n  }\n  async fetch(url, params = {}) {\n    var _a, _b, _c, _d, _e;\n    const requestInit = {\n      ...this.fetchOptions,\n      ...params.fetchOptions,\n      headers: {\n        ...(_a = this.fetchOptions) == null ? void 0 : _a.headers,\n        ...(_b = params.fetchOptions) == null ? void 0 : _b.headers\n      },\n      signal: ((_c = params.fetchOptions) == null ? void 0 : _c.signal) || params.signal || ((_d = this.fetchOptions) == null ? void 0 : _d.signal)\n    };\n    if ((_e = params.fetchOptions) == null ? void 0 : _e.body) {\n      return this.queueFetch(url, requestInit);\n    } else {\n      return this.dedupeFetch(url, requestInit);\n    }\n  }\n  queueFetch(url, requestInit = {}) {\n    const hostname = new URL(url).hostname;\n    if (!this.queuedFetchJobs[hostname]) {\n      this.queuedFetchJobs[hostname] = pLimit({\n        interval: UNKNOWN_RATE_LIMIT_DELAY\n      });\n    }\n    return this.queuedFetchJobs[hostname](() => this.createFetchJob(url, requestInit));\n  }\n  dedupeFetch(url, requestInit = {}) {\n    let job;\n    if (this.dedupedFetchJobs[url] && this.dedupedFetchJobs[url].has(requestInit.signal)) {\n      job = this.dedupedFetchJobs[url].get(requestInit.signal);\n    } else {\n      this.dedupedFetchJobs[url] = this.dedupedFetchJobs[url] || /* @__PURE__ */ new Map();\n      job = this.createFetchJob(url, requestInit).finally(() => {\n        var _a, _b;\n        (_a = this.dedupedFetchJobs[url]) == null ? void 0 : _a.delete(requestInit.signal);\n        if (((_b = this.dedupedFetchJobs[url]) == null ? void 0 : _b.size) === 0) {\n          delete this.dedupedFetchJobs[url];\n        }\n      });\n      this.dedupedFetchJobs[url].set(requestInit.signal, job);\n    }\n    return job;\n  }\n  createFetchJob(url, requestInit = {}) {\n    return this.fetchFn(url, requestInit).then(async (res) => {\n      let json = void 0;\n      let text = void 0;\n      if (res.ok) {\n        try {\n          json = await res.json();\n        } catch {\n        }\n      } else {\n        try {\n          text = await res.text();\n          json = JSON.parse(text);\n        } catch {\n        }\n      }\n      return {\n        status: res.status,\n        headers: res.headers,\n        json,\n        text\n      };\n    });\n  }\n}\nexport {\n  BaseClient,\n  UNKNOWN_RATE_LIMIT_DELAY\n};\n//# sourceMappingURL=BaseClient.js.map\n"],"names":["PrismicError","pLimit"],"mappings":"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","x_google_ignoreList":[0]}